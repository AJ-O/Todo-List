{"ast":null,"code":"var _jsxFileName = \"/home/ashish/todo-list/src/components/TodoIndividualItem.tsx\";\nimport * as React from 'react';\nimport shortid from 'shortid';\n\nconst TodoIndividualItem = props => {\n  const [timeState, setTime] = React.useState(Date);\n  const [formState, setFormState] = React.useState(\"\");\n  const inputRef = React.useRef(null);\n\n  function handleInputChange(event) {\n    setFormState(event.target.value);\n  }\n\n  function handleInputEnter(event) {\n    if (event.key === \"Enter\") {\n      const newTodoItem = {\n        id: shortid.generate(),\n        task: formState,\n        isCompleted: false\n      };\n      props.handleTodoCreate(newTodoItem);\n\n      if (inputRef && inputRef.current) {\n        inputRef.current.value = \"\";\n      }\n    }\n  }\n\n  function handleData() {\n    var _document$getElementB, _document$getElementB2;\n\n    let task = (_document$getElementB = document.getElementById(\"taskId\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.textContent;\n    let time = (_document$getElementB2 = document.getElementById(\"dataId\")) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.textContent;\n    console.log(time);\n\n    if (task != null && time != null) {\n      const newTodoItem = {\n        id: shortid.generate(),\n        task: formState,\n        isCompleted: false,\n        setTime: time\n      };\n      props.handleTodoCreate(newTodoItem);\n\n      if (inputRef && inputRef.current) {\n        inputRef.current.value = \"\";\n      }\n    } else {\n      alert(\"Kindly enter required data before adding\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"taskId\",\n    ref: inputRef,\n    type: \"text\",\n    placeholder: \"Enter task\",\n    onChange: event => handleInputChange(event) // onKeyPress={event => handleInputEnter(event)}\n    ,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"timeId\",\n    type: \"date\",\n    placeholder: \"Enter date to do the task\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Add task\"));\n};\n\nexport default TodoIndividualItem;","map":{"version":3,"sources":["/home/ashish/todo-list/src/components/TodoIndividualItem.tsx"],"names":["React","shortid","TodoIndividualItem","props","timeState","setTime","useState","Date","formState","setFormState","inputRef","useRef","handleInputChange","event","target","value","handleInputEnter","key","newTodoItem","id","generate","task","isCompleted","handleTodoCreate","current","handleData","document","getElementById","textContent","time","console","log","alert"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAIA,MAAMC,kBAAkB,GAAIC,KAAD,IAA8C;AAErE,QAAM,CAACC,SAAD,EAAYC,OAAZ,IAAuBL,KAAK,CAACM,QAAN,CAAeC,IAAf,CAA7B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlC;AACA,QAAMI,QAAQ,GAAGV,KAAK,CAACW,MAAN,CAA+B,IAA/B,CAAjB;;AAEA,WAASC,iBAAT,CAA2BC,KAA3B,EAAsE;AAClEJ,IAAAA,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH;;AAED,WAASC,gBAAT,CAA0BH,KAA1B,EAAsD;AAClD,QAAGA,KAAK,CAACI,GAAN,KAAc,OAAjB,EAA0B;AACtB,YAAMC,WAAwC,GAAG;AAC7CC,QAAAA,EAAE,EAAElB,OAAO,CAACmB,QAAR,EADyC;AAE7CC,QAAAA,IAAI,EAAEb,SAFuC;AAG7Cc,QAAAA,WAAW,EAAE;AAHgC,OAAjD;AAMAnB,MAAAA,KAAK,CAACoB,gBAAN,CAAuBL,WAAvB;;AAEA,UAAGR,QAAQ,IAAIA,QAAQ,CAACc,OAAxB,EAAiC;AAC7Bd,QAAAA,QAAQ,CAACc,OAAT,CAAiBT,KAAjB,GAAyB,EAAzB;AACH;AACJ;AACJ;;AAED,WAASU,UAAT,GAAsB;AAAA;;AAClB,QAAIJ,IAAS,4BAAEK,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAF,0DAAE,sBAAmCC,WAAlD;AACA,QAAIC,IAAS,6BAAGH,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAH,2DAAG,uBAAmCC,WAAnD;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAGR,IAAI,IAAI,IAAR,IAAgBQ,IAAI,IAAI,IAA3B,EAAiC;AAC7B,YAAMX,WAAwC,GAAG;AAC7CC,QAAAA,EAAE,EAAElB,OAAO,CAACmB,QAAR,EADyC;AAE7CC,QAAAA,IAAI,EAAEb,SAFuC;AAG7Cc,QAAAA,WAAW,EAAE,KAHgC;AAI7CjB,QAAAA,OAAO,EAAEwB;AAJoC,OAAjD;AAMA1B,MAAAA,KAAK,CAACoB,gBAAN,CAAuBL,WAAvB;;AAEA,UAAGR,QAAQ,IAAIA,QAAQ,CAACc,OAAxB,EAAiC;AAC7Bd,QAAAA,QAAQ,CAACc,OAAT,CAAiBT,KAAjB,GAAyB,EAAzB;AACH;AAEJ,KAbD,MAaO;AACHiB,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACH;AACJ;;AAED,sBAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,EAAE,EAAC,QADP;AAEI,IAAA,GAAG,EAAEtB,QAFT;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,WAAW,EAAC,YAJhB;AAKI,IAAA,QAAQ,EAAEG,KAAK,IAAID,iBAAiB,CAACC,KAAD,CALxC,CAMI;AANJ;AAOI,IAAA,QAAQ,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAUI;AACI,IAAA,EAAE,EAAC,QADP;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,2BAHhB;AAII,IAAA,QAAQ,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAgBI;AAAQ,IAAA,OAAO,EAAEY,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ,CAFJ;AAsBH,CAtED;;AAwEA,eAAevB,kBAAf","sourcesContent":["import * as React from 'react'\nimport shortid from 'shortid'\n\nimport {TodoCreateIndividualItemInterface, TodoIndividualItemInterface} from './../interfaces'\n\nconst TodoIndividualItem = (props: TodoCreateIndividualItemInterface) => {\n    \n    const [timeState, setTime] = React.useState(Date)\n    const [formState, setFormState] = React.useState(\"\")\n    const inputRef = React.useRef<HTMLInputElement>(null)\n\n    function handleInputChange(event: React.ChangeEvent<HTMLInputElement>){\n        setFormState(event.target.value)\n    }\n\n    function handleInputEnter(event: React.KeyboardEvent) {\n        if(event.key === \"Enter\") {\n            const newTodoItem: TodoIndividualItemInterface = {\n                id: shortid.generate(),\n                task: formState,\n                isCompleted: false\n            }\n\n            props.handleTodoCreate(newTodoItem)\n\n            if(inputRef && inputRef.current) {\n                inputRef.current.value = \"\"\n            }\n        }\n    }\n\n    function handleData() {\n        let task: any= document.getElementById(\"taskId\")?.textContent;\n        let time: any = document.getElementById(\"dataId\")?.textContent;\n        console.log(time);\n        if(task != null && time != null) {\n            const newTodoItem: TodoIndividualItemInterface = {\n                id: shortid.generate(),\n                task: formState,\n                isCompleted: false,\n                setTime: time\n            }\n            props.handleTodoCreate(newTodoItem)\n\n            if(inputRef && inputRef.current) {\n                inputRef.current.value = \"\"\n            }\n\n        } else {\n            alert(\"Kindly enter required data before adding\")\n        }\n    }\n    \n    return(\n\n        <div className=\"input-form\">\n            <input\n                id=\"taskId\"\n                ref={inputRef}\n                type=\"text\"\n                placeholder=\"Enter task\"\n                onChange={event => handleInputChange(event)}\n                // onKeyPress={event => handleInputEnter(event)}\n                required\n            />\n            <input\n                id=\"timeId\"\n                type=\"date\"\n                placeholder=\"Enter date to do the task\"\n                required\n            />\n            <button onClick={handleData}>Add task</button>\n        </div>\n    \n    )\n}\n\nexport default TodoIndividualItem"]},"metadata":{},"sourceType":"module"}