{"ast":null,"code":"var _jsxFileName = \"/home/ashish/todo-list/client/src/App.tsx\";\nimport React from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\nimport './styles/style.css';\nimport { render } from 'react-dom';\nimport shortid from 'shortid';\nimport TodoForm from './components/TodoForm';\n\nconst App = () => {\n  const [testTodos, setTodos] = React.useState([]); //better way to render!\n  // if(t1){\n  //   render(test(), formEle)\n  // }\n\n  function showForm() {\n    let ele = document.getElementById(\"displayForm\");\n\n    if (ele) {\n      ele.style.display = \"inline-block\";\n    }\n\n    console.log(\"called!\");\n  } // function test() {\n  //   console.log(\"test\")\n  //   return(\n  //     <div className=\"displayForm\">\n  //         <TodoForm\n  //             title={\"test\"}\n  //             id={shortid.generate()}\n  //             subtasks={testTodos}\n  //             createTask={testTodos}\n  //             handleTodoCreate={handleTodoCreate}\n  //             handleTodoComplete={handleTodoComplete}\n  //             handleTodoDelete={handleTodoDelete}\n  //             handleTodoUpdate={handleTodoUpdate}\n  //         />\n  //         <button onClick={() => {\n  //             if(!t1) {\n  //               funct2(true)\n  //             } else {\n  //               funct2(false)\n  //             }\n  //           }}>Finalise List</button>\n  //     </div>\n  //   )\n  // }\n\n\n  function handleTodoCreate(todo) {\n    console.log(\"create called!\");\n    console.log(testTodos);\n    const newTodoState = [...testTodos];\n    newTodoState.push(todo);\n    setTodos(newTodoState);\n  }\n\n  function handleTodoUpdate() {}\n\n  function handleTodoDelete() {}\n\n  function handleTodoComplete() {}\n\n  function addListToDatabase() {\n    let ele = document.getElementById(\"displayForm\");\n\n    if (ele) {\n      ele.style.display = \"none\";\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: showForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Create List\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"displayForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    title: \"test\",\n    id: shortid.generate(),\n    subtasks: testTodos,\n    createTask: testTodos,\n    handleTodoCreate: handleTodoCreate,\n    handleTodoComplete: handleTodoComplete,\n    handleTodoDelete: handleTodoDelete,\n    handleTodoUpdate: handleTodoUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      addListToDatabase;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Finalise List\")));\n};\n\nexport default App;\nconst rootElement = document.getElementById('root'); //const formEle = document.getElementById('formDisplay')\n\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 8\n  }\n}), rootElement);","map":{"version":3,"sources":["/home/ashish/todo-list/client/src/App.tsx"],"names":["React","render","shortid","TodoForm","App","testTodos","setTodos","useState","showForm","ele","document","getElementById","style","display","console","log","handleTodoCreate","todo","newTodoState","push","handleTodoUpdate","handleTodoDelete","handleTodoComplete","addListToDatabase","generate","rootElement"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,WAAP;AACA,OAAO,oBAAP;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBN,KAAK,CAACO,QAAN,CAA8C,EAA9C,CAA9B,CAFgB,CAGhB;AAEA;AACA;AACA;;AAEA,WAASC,QAAT,GAAmB;AACjB,QAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAV;;AACA,QAAGF,GAAH,EAAQ;AACNA,MAAAA,GAAG,CAACG,KAAJ,CAAUC,OAAV,GAAoB,cAApB;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GAfe,CAiBhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASC,gBAAT,CAA0BC,IAA1B,EAA6D;AAC3DH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AACA,UAAMa,YAA2C,GAAG,CAAC,GAAGb,SAAJ,CAApD;AACAa,IAAAA,YAAY,CAACC,IAAb,CAAkBF,IAAlB;AACAX,IAAAA,QAAQ,CAACY,YAAD,CAAR;AACD;;AAED,WAASE,gBAAT,GAA4B,CAE3B;;AAED,WAASC,gBAAT,GAA4B,CAE3B;;AAED,WAASC,kBAAT,GAA8B,CAE7B;;AAED,WAASC,iBAAT,GAA6B;AAC3B,QAAId,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAV;;AACA,QAAGF,GAAH,EAAQ;AACNA,MAAAA,GAAG,CAACG,KAAJ,CAAUC,OAAV,GAAoB,MAApB;AACD;AACF;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE,MADX;AAEI,IAAA,EAAE,EAAEN,OAAO,CAACsB,QAAR,EAFR;AAGI,IAAA,QAAQ,EAAEnB,SAHd;AAII,IAAA,UAAU,EAAEA,SAJhB;AAKI,IAAA,gBAAgB,EAAEW,gBALtB;AAMI,IAAA,kBAAkB,EAAEM,kBANxB;AAOI,IAAA,gBAAgB,EAAED,gBAPtB;AAQI,IAAA,gBAAgB,EAAED,gBARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAWI;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACG,MAAAA,iBAAiB;AAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXJ,CAFF,CADF;AAmBD,CAxFD;;AA0FA,eAAenB,GAAf;AACA,MAAMqB,WAAW,GAAGf,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,C,CACA;;AACAV,MAAM,eAAC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAUwB,WAAV,CAAN","sourcesContent":["import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport './styles/style.css'\nimport {render} from 'react-dom'\nimport shortid from 'shortid'\n\nimport TodoForm from './components/TodoForm'\nimport {TodoIndividualItemInterface} from './interfaces'\n\nconst App = () => {\n\n  const [testTodos, setTodos] = React.useState<TodoIndividualItemInterface[]>([])\n  //better way to render!\n\n  // if(t1){\n  //   render(test(), formEle)\n  // }\n\n  function showForm(){\n    let ele = document.getElementById(\"displayForm\")\n    if(ele) {\n      ele.style.display = \"inline-block\"\n    }\n    console.log(\"called!\")\n  }\n\n  // function test() {\n  //   console.log(\"test\")\n  //   return(\n  //     <div className=\"displayForm\">\n  //         <TodoForm\n  //             title={\"test\"}\n  //             id={shortid.generate()}\n  //             subtasks={testTodos}\n  //             createTask={testTodos}\n  //             handleTodoCreate={handleTodoCreate}\n  //             handleTodoComplete={handleTodoComplete}\n  //             handleTodoDelete={handleTodoDelete}\n  //             handleTodoUpdate={handleTodoUpdate}\n  //         />\n  //         <button onClick={() => {\n  //             if(!t1) {\n  //               funct2(true)\n  //             } else {\n  //               funct2(false)\n  //             }\n  //           }}>Finalise List</button>\n  //     </div>\n  //   )\n  // }\n\n  function handleTodoCreate(todo: TodoIndividualItemInterface) {\n    console.log(\"create called!\")\n    console.log(testTodos)\n    const newTodoState: TodoIndividualItemInterface[] = [...testTodos]\n    newTodoState.push(todo)\n    setTodos(newTodoState)\n  }\n\n  function handleTodoUpdate() {\n\n  }\n\n  function handleTodoDelete() {\n\n  }\n\n  function handleTodoComplete() {\n\n  }\n\n  function addListToDatabase() {\n    let ele = document.getElementById(\"displayForm\")\n    if(ele) {\n      ele.style.display = \"none\"\n    }\n  }\n\n  return (\n    <div>\n      <button onClick={showForm}>Create List</button>\n      <div id=\"displayForm\">\n          <TodoForm\n              title={\"test\"}\n              id={shortid.generate()}\n              subtasks={testTodos}\n              createTask={testTodos}\n              handleTodoCreate={handleTodoCreate}\n              handleTodoComplete={handleTodoComplete}\n              handleTodoDelete={handleTodoDelete}\n              handleTodoUpdate={handleTodoUpdate}\n          />\n          <button onClick={() => {addListToDatabase}}>Finalise List</button>\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\nconst rootElement = document.getElementById('root')\n//const formEle = document.getElementById('formDisplay')\nrender(<App />, rootElement)"]},"metadata":{},"sourceType":"module"}