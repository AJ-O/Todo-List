{"ast":null,"code":"var _jsxFileName = \"/home/ashish/todo-list/src/components/TodoIndividualItem.tsx\";\nimport * as React from 'react';\nimport shortid from 'shortid';\n\nconst TodoIndividualItem = props => {\n  const [formState, setFormState] = React.useState(\"\");\n  const inputRef = React.useRef(null);\n\n  function handleInputChange(event) {\n    setFormState(event.target.value);\n  }\n\n  function handleInputEnter(event) {\n    if (event.key === \"Enter\") {\n      const newTodoItem = {\n        id: shortid.generate(),\n        task: formState,\n        isCompleted: false\n      };\n      props.handleTodoCreate(newTodoItem);\n      console.log(inputRef, inputRef.current);\n\n      if (inputRef && inputRef.current) {\n        inputRef.current.value = \"\";\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    placeholder: \"Enter task\",\n    onChange: event => handleInputChange(event),\n    onKeyPress: event => handleInputEnter(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    placeholder: \"Enter date to do the task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default TodoIndividualItem;","map":{"version":3,"sources":["/home/ashish/todo-list/src/components/TodoIndividualItem.tsx"],"names":["React","shortid","TodoIndividualItem","props","formState","setFormState","useState","inputRef","useRef","handleInputChange","event","target","value","handleInputEnter","key","newTodoItem","id","generate","task","isCompleted","handleTodoCreate","console","log","current"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAIA,MAAMC,kBAAkB,GAAIC,KAAD,IAA8C;AAErE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlC;AACA,QAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAA+B,IAA/B,CAAjB;;AAEA,WAASC,iBAAT,CAA2BC,KAA3B,EAAsE;AAClEL,IAAAA,YAAY,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH;;AAED,WAASC,gBAAT,CAA0BH,KAA1B,EAAsD;AAClD,QAAGA,KAAK,CAACI,GAAN,KAAc,OAAjB,EAA0B;AACtB,YAAMC,WAAwC,GAAG;AAC7CC,QAAAA,EAAE,EAAEf,OAAO,CAACgB,QAAR,EADyC;AAE7CC,QAAAA,IAAI,EAAEd,SAFuC;AAG7Ce,QAAAA,WAAW,EAAE;AAHgC,OAAjD;AAMAhB,MAAAA,KAAK,CAACiB,gBAAN,CAAuBL,WAAvB;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ,EAAsBA,QAAQ,CAACgB,OAA/B;;AAEA,UAAGhB,QAAQ,IAAIA,QAAQ,CAACgB,OAAxB,EAAiC;AAC7BhB,QAAAA,QAAQ,CAACgB,OAAT,CAAiBX,KAAjB,GAAyB,EAAzB;AACH;AACJ;AACJ;;AAED,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,GAAG,EAAEL,QADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,YAHhB;AAII,IAAA,QAAQ,EAAEG,KAAK,IAAID,iBAAiB,CAACC,KAAD,CAJxC;AAKI,IAAA,UAAU,EAAEA,KAAK,IAAIG,gBAAgB,CAACH,KAAD,CALzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,2BAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAFJ;AAiBH,CA5CD;;AA8CA,eAAeR,kBAAf","sourcesContent":["import * as React from 'react'\nimport shortid from 'shortid'\n\nimport {TodoCreateIndividualItemInterface, TodoIndividualItemInterface} from './../interfaces'\n\nconst TodoIndividualItem = (props: TodoCreateIndividualItemInterface) => {\n    \n    const [formState, setFormState] = React.useState(\"\")\n    const inputRef = React.useRef<HTMLInputElement>(null)\n\n    function handleInputChange(event: React.ChangeEvent<HTMLInputElement>){\n        setFormState(event.target.value)\n    }\n\n    function handleInputEnter(event: React.KeyboardEvent) {\n        if(event.key === \"Enter\") {\n            const newTodoItem: TodoIndividualItemInterface = {\n                id: shortid.generate(),\n                task: formState,\n                isCompleted: false\n            }\n\n            props.handleTodoCreate(newTodoItem)\n            \n            console.log(inputRef, inputRef.current)\n\n            if(inputRef && inputRef.current) {\n                inputRef.current.value = \"\"\n            }\n        }\n    }\n    \n    return(\n\n        <div>\n            <input\n                ref={inputRef}\n                type=\"text\"\n                placeholder=\"Enter task\"\n                onChange={event => handleInputChange(event)}\n                onKeyPress={event => handleInputEnter(event)}\n            />\n            <input\n                type=\"date\"\n                placeholder=\"Enter date to do the task\"\n            />\n        </div>\n    \n    )\n}\n\nexport default TodoIndividualItem"]},"metadata":{},"sourceType":"module"}